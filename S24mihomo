#!/bin/sh

# Обновлённый init-скрипт для Mihomo с поддержкой автозагрузки модулей ядра

# === Конфигурация ===
ENABLED=yes
PROCS="mihomo"
MIHOMO_BIN="/opt/sbin/mihomo"
MIHOMO_DIR="/opt/etc/mihomo"
ARGS="-d ${MIHOMO_DIR}"
PID_FILE="/opt/var/run/mihomo.pid"
LOG_FILE="/opt/var/log/mihomo.log"

POLICY_NAME="mihomo"
TABLE_MARK="0x111"
TABLE_ID="111"
ROUTER_API_URL="localhost:79/rci/show/ip/policy"
TPROXY_PORT="4000"

# === Загрузка Entware функций ===
if [ -f /opt/etc/init.d/rc.func ]; then
    . /opt/etc/init.d/rc.func
else
    echo "Error: /opt/etc/init.d/rc.func not found." >&2
    exit 1
fi

log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}

load_kernel_module() {
    local mod=$1
    if ! lsmod | grep -q "^${mod%%.ko}"; then
        [ -f "/opt/lib/modules/${mod}" ] && insmod "/opt/lib/modules/${mod}" 2>/dev/null
        [ -f "/lib/modules/$(uname -r)/kernel/net/netfilter/${mod}" ] && insmod "/lib/modules/$(uname -r)/kernel/net/netfilter/${mod}" 2>/dev/null
    fi
    lsmod | grep -q "^${mod%%.ko}"
}

check_dependencies() {
    for cmd in iptables curl jq ip; do
        command -v "$cmd" >/dev/null 2>&1 || {
            echo "Error: command $cmd not found." >&2
            return 1
        }
    done

    for mod in xt_TPROXY.ko xt_socket.ko; do
        load_kernel_module "$mod" || {
            echo "Error: kernel module $mod not found or failed to load." >&2
            return 1
        }
    done
    return 0
}

get_policy_mark() {
    mark=$(curl -kfsS "$ROUTER_API_URL" | jq -r ".[] | select(.description | ascii_downcase == \"$POLICY_NAME\") | .mark")
    [ -n "$mark" ] && echo "0x$mark" || return 1
}

check_keenetic_port() {
    port=$(curl -kfsS "localhost:79/rci/ip/http/ssl" | jq -r '.port')
    [ "$port" = "443" ] && {
        echo "Порт 443 занят Keenetic. Измените его на 8443." >&2
        return 1
    }
    return 0
}

configure_tproxy() {
    check_dependencies || return 1

    get_policy_mark || return 1

    iptables -t mangle -N MIHOMO_TPROXY 2>/dev/null || true
    iptables -t mangle -F MIHOMO_TPROXY

    iptables -t mangle -A MIHOMO_TPROXY -p tcp -j TPROXY --on-port $TPROXY_PORT --tproxy-mark $TABLE_MARK
    iptables -t mangle -A MIHOMO_TPROXY -p udp -j TPROXY --on-port $TPROXY_PORT --tproxy-mark $TABLE_MARK

    iptables -t mangle -A MIHOMO_TPROXY -j MARK --set-mark $TABLE_MARK
    iptables -t mangle -A MIHOMO_TPROXY -j CONNMARK --save-mark

    iptables -t mangle -C PREROUTING -m mark --mark $TABLE_MARK -j MIHOMO_TPROXY 2>/dev/null || \
    iptables -t mangle -A PREROUTING -m mark --mark $TABLE_MARK -j MIHOMO_TPROXY

    ip rule add fwmark $TABLE_MARK lookup $TABLE_ID 2>/dev/null || true
    ip route add local default dev lo table $TABLE_ID 2>/dev/null || true

    log "Настроены правила TPROXY на порт $TPROXY_PORT с меткой $TABLE_MARK"
}

start_mihomo() {
    mkdir -p "$(dirname "$PID_FILE")" "$(dirname "$LOG_FILE")" "$MIHOMO_DIR"
    [ -f "$PID_FILE" ] && kill -0 "$(cat "$PID_FILE")" 2>/dev/null && return 0

    echo "Запуск $PROCS..."

    check_keenetic_port || return 1
    configure_tproxy || return 1

    nohup $MIHOMO_BIN $ARGS > "$LOG_FILE" 2>&1 &
    echo $! > "$PID_FILE"
    echo "$PROCS запущен, PID: $(cat "$PID_FILE")"
}

case "$1" in
    start) start_mihomo ;;
    stop) kill -9 $(cat "$PID_FILE" 2>/dev/null) 2>/dev/null && rm -f "$PID_FILE" ;;
    restart) $0 stop && sleep 1 && $0 start ;;
    *) echo "Usage: $0 {start|stop|restart}" ;;
esac
